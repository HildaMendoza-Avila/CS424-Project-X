install.packages("rgeos")
install.packages("ggmap")
install.packages("mapdata")
install.packages("maptools")
install.packages("ggthemes")
library(ggplot2)
library(rgeos)
library(ggmap)
library(maps)
library(mapdata)
library(maptools)
library(ggthemes)
library(sp)
library(stringr)
library(plyr)
library(lubridate)
source('C:/Users/hilda/OneDrive/Desktop/CS 424/Week 12 Homework/CS 424 Week 12.R')
View(covidIL)
ggplot() + geom_polygon(data = ilCountyCovid, aes(x = long, y = lat, group = group, fill = cases), color = "black") + coord_fixed(1.2) +
geom_text(data = centroids2, aes(x = clong, y = clat, label = county), color = "black", size = 2.25) + scale_fill_distiller(palette = "Blues") +
labs(fill = "cases") + theme_map()
gsub("Mc Henry", "Mchenry", covidIL$county)
covidIL$county <- gsub("Mc Henry", "Mchenry", covidIL$county)
subset(covidIL, county == "Mchenry")
subset(covidIL, county == "Mc Henry")
subset(covidIL, county == "Mc Henry")
View(covidIL)
subset(covidIL, county == "McHenry")
covidIL$county <- gsub("McHenry", "Mchenry", covidIL$county)
subset(covidIL, county == "Mchenry")
#then take a look at the data for a given day on a map of Illinois counties. Note that today() can be a useful function to get today's date. Similarly today()-1 is yesterday. Note that the data in the file may be a day or two behind.
covidILOneDay <- subset(covidIL, newDate == "2021-03-15")
ilCountyCovid <- join(il, covidILOneDay)
ggplot() + geom_polygon(data = ilCountyCovid, aes(x = long, y = lat, group = group, fill = cases), color = "black") + coord_fixed(1.2) +
geom_text(data = centroids2, aes(x = clong, y = clat, label = county), color = "black", size = 2.25) + scale_fill_distiller(palette = "Blues") +
labs(fill = "cases") + theme_map()
covidIL$county <- gsub("DuPage", "Du Page", covidIL$county)
subset(covidIL, county == "Du Page")
covidIL$county <- gsub("McHenry", "Mchenry", covidIL$county)
subset(covidIL, county == "Mchenry")
covidIL$county <- gsub("DeKalb", "De Kalb", covidIL$county)
subset(covidIL, county == "De Kalb")
covidIL$county <- gsub("LaSalle", "La Salle", covidIL$county)
subset(covidIL, county == "La Salle")
covidIL$county <- gsub("McLean", "Mclean", covidIL$county)
subset(covidIL, county == "Mclean")
covidIL$county <- gsub("DuPage", "Du Page", covidIL$county)
subset(covidIL, county == "Du Page")
covidIL$county <- gsub("McDonough", "Mcdonough", covidIL$county)
subset(covidIL, county == "Mcdonough")
covidIL$county <- gsub("St. Clair", "St Clair", covidIL$county)
subset(covidIL, county == "St Clair")
#then take a look at the data for a given day on a map of Illinois counties. Note that today() can be a useful function to get today's date. Similarly today()-1 is yesterday. Note that the data in the file may be a day or two behind.
covidILOneDay <- subset(covidIL, newDate == "2021-03-15")
ilCountyCovid <- join(il, covidILOneDay)
ggplot() + geom_polygon(data = ilCountyCovid, aes(x = long, y = lat, group = group, fill = cases), color = "black") + coord_fixed(1.2) +
geom_text(data = centroids2, aes(x = clong, y = clat, label = county), color = "black", size = 2.25) + scale_fill_distiller(palette = "Blues") +
labs(fill = "cases") + theme_map()
library(shiny); runApp('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project03/DataExperimentationScript.R')
source('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project-X/directorySetup.R')
source('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project-X/app.R')
source('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project-X/app.R')
source('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project-X/app.R')
source('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project-X/app.R')
source('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project-X/app.R')
View(global_data)
source('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project-X/app.R')
source('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project-X/app.R')
runApp('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project02/CS424-Project02-Script.R')
setwd('..')
setwd('CS424-Project02/')
runApp('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project02/CS424-Project02-Script.R')
setwd('..')
setwd('Project02 - Files from GitHub/')
runApp('C:/Users/hilda/OneDrive/Desktop/CS 424/Project02 - Files from GitHub/CS424-Project02-Script.R')
runApp('C:/Users/hilda/OneDrive/Desktop/CS 424/Project02 - Files from GitHub/CS424-Project02-Script.R')
runApp('C:/Users/hilda/OneDrive/Desktop/CS 424/Project02 - Files from GitHub/CS424-Project02-Script.R')
runApp('CS424-Project02-Script.R')
runApp('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project02/CS424-Project02-Script.R')
setwd('..')
setwd("CS424-Project02/")
runApp('C:/Users/hilda/OneDrive/Desktop/CS 424/CS424-Project02/CS424-Project02-Script.R')
setwd('..')
setwd('Project02 - Files from GitHub/')
runApp('C:/Users/hilda/OneDrive/Desktop/CS 424/Project02 - Files from GitHub/CS424-Project02-Script.R')
setwd('..')
setwd('CS424-Project-X/')
runApp()
runApp()
View(global_data)
colnames(global_data)
runApp()
View(global_data)
View(global_data)
# Remove unnecessary data columns
columnRemove <- function(x) {
x <- subset(x, select = -c(country, gppd_idnr, commissioning_year, wepp_id, year_of_capacity_data, generation_gwh_2013, generation_gwh_2014, generation_gwh_2015, generation_gwh_2016, generation_gwh_2017, estimated_generation_gwh))
x
}
global_data <- columnRemove(global_data)
View(global_data)
# Remove all NA entries in this range in columns
global_data <- global_data[complete.cases(global_data[4:6]),]
install.packages("tigris")
install.packages("mapview")
tmap_mode("view")
tmap_mode("view")
tmap_mode("view")
tm_shape(World) +
tm_polygons("HPI")
library(tmap)
# install.packages("tigris")
# install.packages("mapview")
install.packages("tmap")
tmap_mode("view")
tm_shape(World) +
tm_polygons("HPI")
library(tmap)
tmap_mode("view")
tm_shape(World) +
tm_polygons("HPI")
tmap_mode("view")
data("World")
tm_shape(World) +
tm_polygons("HPI")
tmap_mode("view")
data("World")
tm_shape(World) +
tm_polygons("global_data")
colnames(global_data)
tmap_mode("view")
# data("World")
tm_shape(global_data) +
tm_polygons("primary_fuel")
africa = world %>%
filter(continent == "Africa", !is.na(iso_a2)) %>%
left_join(worldbank_df, by = "iso_a2") %>%
dplyr::select(name, subregion, gdpPercap, HDI, pop_growth) %>%
st_transform("+proj=aea +lat_1=20 +lat_2=-23 +lat_0=0 +lon_0=25")
runApp()
runApp()
